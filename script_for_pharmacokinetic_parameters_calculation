model = data.get("data/Collaboration/test/Data/Diagrams/final_model"); //указываем путь к рабочей модели

model.setCurrentStateName("CYP2C9*1/CYP2C9*1"); //указываем состояние модели

var span = se.createSpan(0, 24, 0.01); //указываем параметры симуляции модели: начальное время, конечное время, шаг симуляции

var result = se.simulate(model, span); //сохраняем результат симуляции модели

var C_max_L = 0; //максимальная концентрация лозартана
var T_max_L = 0; //время, на которое приходится максимальная концентрация лозартана
var C_max_C = 0; //максимальная концентрация карбоксилозартана
var T_max_C = 0; //время, на которое приходится максимальная концентрация карбоксилозартана

for (var time = 0; time<2400; time++) //проходим по каждому шагу симуляции
{
	var current_C_p = result.getValues("C_p")[time]; //значение C_p (концентрация лозартана) на данном шаге симуляции
	var current_C_m = result.getValues("C_m")[time]; //значение C_m (концентрация карбоксилозартана) на данном шаге симуляции

	if(current_C_p > C_max_L) //если значение C_p на данном шаге симуляции больше текущего C_max_L
	{
		C_max_L = current_C_p; //записываем новое значение C_max_L
		T_max_L = time; //записываем новое значение T_max_L
	}

	if(result.getValues("C_m")[time] > C_max_C) //если значение C_m на данном шаге симуляции больше текущего C_max_C
	{
		C_max_C = current_C_m; //записываем новое значение C_max_C
		T_max_C = time; //записываем новое значение T_max_C
	}
}

print("максимальная концентрация лозартана:"); //вывод результата
print(C_max_L);
print("наступила на:");
print(T_max_L*0.01);
print("максимальная концентрация карбоксилозартана:");
print(C_max_C);
print("наступила на:");
print(T_max_C*0.01);
print("площадь под кривой концентрация-время лозартана:");
print(result.getValues("AUC_L")[2400]);
print("площадь под кривой концентрация-время карбоксилозартана:");
print(result.getValues("AUC_C")[2400]);
print("AUC_ratio:"); //отношение AUC_L к AUC_C
print(result.getValues("AUC_ratio")[2400]);